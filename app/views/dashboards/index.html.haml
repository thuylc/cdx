.dashboard
  %section.row
    .small-12.columns
      .search
        %form#filters-form{ action: dashboard_path }

          .topdateto
            %label.block Date To
            = date_field('range','start_time[lte]')

          .topdatefrom
            %label.block Date From
            = date_field('range','start_time[gte]')

          .topdateperiod
            %form#filters-form{ action: dashboard_path, 'data-auto-submit' => true }
              .filter
                %label.block Date Period
                = cdx_select name: 'since', value: params['since'] do |select|
                  - select.items options_for_date, :value, :label

              .topbutton
                %input#query_button.btn-primary(type='submit' value='Filter')


  %main
    %section.row
      .small-8.columns.box
        %header
          = image_tag('img/test-tube-rack.png')
          %h3 Total Tests
        .box-content
          #chartContainer{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartContainer', chartData: Extras::Charts::VerticalColumns.new(@dashboard_report.total_tests).render
      .small-4.columns.box
        %header
          = image_tag('img/test-tube.png')
          %h3 Failed Tests
        .box-content
          #failedChartContainer{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'failedChartContainer', chartData: Extras::Charts::Pie.new(@dashboard_report.failed_tests).render
    %section.row
      .small-6.columns.box
        %header
          =image_tag('img/site.png')
          %h3 Total Tests by Site
        .box-content
          #chartTotalTestsSite{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartTotalTestsSite', chartData: Extras::Charts::HorizontalColumns.new(@dashboard_report.query_site_tests).render
      .col.small-6.columns.box
        %header
          =image_tag('img/site.png')
          %h3 Average Tests by Site
        .box-content
          #chartAverageTestsSite{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartAverageTestsSite', chartData: Extras::Charts::VerticalColumns.new(@dashboard_report.average_test_per_site).render
    %section.row
      .small-4.columns.box
        %header
          = image_tag('img/device.png')
          %h3 Total Tests by Device
        .box-content
          #chartTotalTestsDevice{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartTotalTestsDevice', chartData: Extras::Charts::Pie.new(@dashboard_report.total_tests_by_device).render

      .small-8.columns.box
        %header
          = image_tag('img/user.png')
          %h3 Average Tests by Technician
        .box-content
          #chartAverageTestsTechnician{:style => "height: 200px; width: 100%;"}
            = react_component 'CanvasJsChart', chartDiv: 'chartAverageTestsTechnician', chartData: Extras::Charts::VerticalColumns.new(@dashboard_report.average_tests_per_technician).render

    %section.row
      .small-12.columns.box
        %header
          = image_tag('img/test-tube.png')
          %h3 Outstanding Tests
        .box-content
          -if(@dashboard_report.outstanding_orders)
            = react_component('OutstandingTestsTable', title: "title", allowSorting: "true", orderBy: "-test_order", data: @dashboard_report.outstanding_orders)
          -else
            No chart information available
